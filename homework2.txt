  gl_basecamp_2020 git:(master) touch README.txt
➜  gl_basecamp_2020 git:(master) ✗ ls
README.txt
➜  gl_basecamp_2020 git:(master) ✗ git add .
➜  gl_basecamp_2020 git:(master) ✗ git commit -m "initial commit"
[master (root-commit) d27e85b] initial commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README.txt
➜  gl_basecamp_2020 git:(master) git log
➜  gl_basecamp_2020 git:(master) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(master) git checkout -b us_123
Switched to a new branch 'us_123'
➜  gl_basecamp_2020 git:(us_123) git log
➜  gl_basecamp_2020 git:(us_123) touch test_login.jar
➜  gl_basecamp_2020 git:(us_123) ✗ ls
README.txt     test_login.jar
➜  gl_basecamp_2020 git:(us_123) ✗ git add .
➜  gl_basecamp_2020 git:(us_123) ✗ git commit -m "added test login"
[us_123 45d0021] added test login
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test_login.jar
➜  gl_basecamp_2020 git:(us_123) git status
On branch us_123
nothing to commit, working tree clean
➜  gl_basecamp_2020 git:(us_123) git log
➜  gl_basecamp_2020 git:(us_123) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_123) git checkout master
Switched to branch 'master'
➜  gl_basecamp_2020 git:(master) git checkout -b us_125
Switched to a new branch 'us_125'
➜  gl_basecamp_2020 git:(us_125) git status
On branch us_125
nothing to commit, working tree clean
➜  gl_basecamp_2020 git:(us_125) git log
➜  gl_basecamp_2020 git:(us_125) touch master_1
➜  gl_basecamp_2020 git:(us_125) ✗ git add .
➜  gl_basecamp_2020 git:(us_125) ✗ git commit -m "added master_1"
[us_125 e1c4e85] added master_1
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 master_1
➜  gl_basecamp_2020 git:(us_125) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_125) ls
README.txt master_1
➜  gl_basecamp_2020 git:(us_125) touch test_charging.jar
➜  gl_basecamp_2020 git:(us_125) ✗ ls
README.txt        master_1          test_charging.jar
➜  gl_basecamp_2020 git:(us_125) ✗ git add .
➜  gl_basecamp_2020 git:(us_125) ✗ git commit -m "added test_chargning"  
[us_125 8cfbb33] added test_chargning
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test_charging.jar
➜  gl_basecamp_2020 git:(us_125) ls
README.txt        master_1          test_charging.jar
➜  gl_basecamp_2020 git:(us_125) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_125) git merge us_123
Merge made by the 'recursive' strategy.
 test_login.jar | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test_login.jar
➜  gl_basecamp_2020 git:(us_125) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_125) ls
README.txt        master_1          test_charging.jar test_login.jar
➜  gl_basecamp_2020 git:(us_125) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_125) git checkout master
Switched to branch 'master'
➜  gl_basecamp_2020 git:(master) git checkout us_125
Switched to branch 'us_125'
➜  gl_basecamp_2020 git:(us_125) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(us_125) ls
README.txt        master_1          test_charging.jar test_login.jar
➜  gl_basecamp_2020 git:(us_125) vim test_login.jar
➜  gl_basecamp_2020 git:(us_125) git status
On branch us_125
nothing to commit, working tree clean
➜  gl_basecamp_2020 git:(us_125) test_login.jar
zsh: command not found: test_login.jar
➜  gl_basecamp_2020 git:(us_125) vim test_login.jar
➜  gl_basecamp_2020 git:(us_125) vim test_login.jar
➜  gl_basecamp_2020 git:(us_125) vim test_login.jar
➜  gl_basecamp_2020 git:(us_125) vim test_login.jar
➜  gl_basecamp_2020 git:(us_125) touch test_login.jar
➜  gl_basecamp_2020 git:(us_125) ls
README.txt        master_1          test_charging.jar test_login.jar
➜  gl_basecamp_2020 git:(us_125) git status
On branch us_125
nothing to commit, working tree clean
➜  gl_basecamp_2020 git:(us_125) touch test_logout
➜  gl_basecamp_2020 git:(us_125) ✗ git status
On branch us_125
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	test_logout

nothing added to commit but untracked files present (use "git add" to track)
➜  gl_basecamp_2020 git:(us_125) ✗ git checkout master
Switched to branch 'master'
➜  gl_basecamp_2020 git:(master) ✗ git branch hotfix
➜  gl_basecamp_2020 git:(master) ✗ touch merge_conflict
➜  gl_basecamp_2020 git:(master) ✗ vim merge_conflict
➜  gl_basecamp_2020 git:(master) ✗ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	merge_conflict
	test_logout

nothing added to commit but untracked files present (use "git add" to track)
➜  gl_basecamp_2020 git:(master) ✗ git add .
➜  gl_basecamp_2020 git:(master) ✗ git commit -m "added merge_conflict file"
[master 6f01137] added merge_conflict file
 2 files changed, 1 insertion(+)
 create mode 100644 merge_conflict
 create mode 100644 test_logout
➜  gl_basecamp_2020 git:(master) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(master) git checkout hotfix
Switched to branch 'hotfix'
➜  gl_basecamp_2020 git:(hotfix) vim merge_conflict
➜  gl_basecamp_2020 git:(hotfix) ✗ git add .
➜  gl_basecamp_2020 git:(hotfix) ✗ git commit -m "added merge_conflict"
[hotfix 7708cf9] added merge_conflict
 1 file changed, 1 insertion(+)
 create mode 100644 merge_conflict
➜  gl_basecamp_2020 git:(hotfix) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(hotfix) git checkout master
Switched to branch 'master'
➜  gl_basecamp_2020 git:(master) git merge hotfix
Auto-merging merge_conflict
CONFLICT (add/add): Merge conflict in merge_conflict
Automatic merge failed; fix conflicts and then commit the result.
➜  gl_basecamp_2020 git:(master) ✗ cat merge_conflict
<<<<<<< HEAD
sdflkjasxxxx
=======
added text
>>>>>>> hotfix
➜  gl_basecamp_2020 git:(master) ✗ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Unmerged paths:
  (use "git add <file>..." to mark resolution)

	both added:      merge_conflict

no changes added to commit (use "git add" and/or "git commit -a")
➜  gl_basecamp_2020 git:(master) ✗ git add merge_conflict
➜  gl_basecamp_2020 git:(master) ✗ git status
On branch master
All conflicts fixed but you are still merging.
  (use "git commit" to conclude merge)

Changes to be committed:

	modified:   merge_conflict

➜  gl_basecamp_2020 git:(master) ✗ git commit merge_conflict
fatal: cannot do a partial commit during a merge.
➜  gl_basecamp_2020 git:(master) ✗ git commit -m "merge_conflict"
[master aaa5241] merge_conflict
➜  gl_basecamp_2020 git:(master) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(master) git fetch
➜  gl_basecamp_2020 git:(master) git log --oneline --decorate --graph --all
➜  gl_basecamp_2020 git:(master) git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>

➜  gl_basecamp_2020 git:(master) git remote add Homework_1 https://github.com/artemy999/GL_basecamp
➜  gl_basecamp_2020 git:(master) git status                                                        
On branch master
nothing to commit, working tree clean
➜  gl_basecamp_2020 git:(master) git remote add origin git@github.com:artemy999/GL_basecamp.git
➜  gl_basecamp_2020 git:(master) git push origin
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

➜  gl_basecamp_2020 git:(master) git push --set-upstream origin master 
The authenticity of host 'github.com (140.82.121.4)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? y
Please type 'yes' or 'no': yes
Warning: Permanently added 'github.com,140.82.121.4' (RSA) to the list of known hosts.
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
➜  gl_basecamp_2020 git:(master) ssh-keygen -o
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/artemdovzhenko/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /Users/artemdovzhenko/.ssh/id_rsa.
Your public key has been saved in /Users/artemdovzhenko/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:BN32SW42GJTDYLreAEvc8GcM1Iu8UQ1qtTxciTMSR2w artemdovzhenko@Artems-MacBook-Pro.local
The key's randomart image is:
+---[RSA 2048]----+
|    ..=*BOoo     |
|   . +.%EoX .    |
|    +.*=X= B .   |
|   . ++=... B    |
|    . ooS  o .   |
|     ..o         |
|      . .        |
|                 |
|                 |
+----[SHA256]-----+
➜  gl_basecamp_2020 git:(master) eval "$(ssh-agent -s)"
Agent pid 11245
➜  gl_basecamp_2020 git:(master) pbcopy < ~/.ssh/id_rsa.pub
➜  gl_basecamp_2020 git:(master) git remote add origin git@github.com:artemy999/Homework1.git  
fatal: remote origin already exists.
➜  gl_basecamp_2020 git:(master) git branch -M main
➜  gl_basecamp_2020 git:(main) git push -u origin main
Warning: Permanently added the RSA host key for IP address '140.82.121.3' to the list of known hosts.
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 8 threads
Compressing objects: 100% (8/8), done.
Writing objects: 100% (12/12), 1018 bytes | 1018.00 KiB/s, done.
Total 12 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To github.com:artemy999/GL_basecamp.git
 * [new branch]      main -> main
Branch 'main' set up to track remote branch 'main' from 'origin'.
➜  gl_basecamp_2020 git:(main) git status                                                        
On branch main
Your branch is up to date with 'origin/main'.

